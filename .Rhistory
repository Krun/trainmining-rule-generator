rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
legend(0,-5, c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
legend(0,-5, c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
legend(0,-5, c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
legend(0,50, c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
legend(0,50, c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
legend(0,5000, c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
legend("topright", c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
labels <- cbind(counts,counts2)
text(x=bp,y=labels,labels=labels, cex=1.25,pos=3,xpd=TRUE)
legend("topright", c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
labels <- rbind(counts,counts2)
text(x=bp,y=labels,labels=labels, cex=1.25,pos=3,xpd=TRUE)
legend("topright", c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
labels <- rbind(counts,counts2)
text(x=bp,y=labels,labels=labels, cex=1,pos=3,xpd=TRUE)
legend("topright", c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
labels <- rbind(counts,counts2)
text(x=bp,y=labels,labels=labels, cex=1,pos=4,xpd=TRUE)
legend("topright", c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
labels <- rbind(counts,counts2)
text(x=bp,y=labels,labels=labels, cex=1,pos=2,xpd=TRUE)
legend("topright", c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
labels <- rbind(counts,counts2)
text(x=bp,y=labels,labels=labels, cex=1,pos=3,xpd=TRUE)
legend("topright", c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
#png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
labels <- rbind(counts,counts2)
text(x=bp,y=labels,labels=labels, cex=0.8,pos=3,xpd=TRUE)
legend("topright", c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
#dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
precision_compare_graphs <- function(rules_s, rules_2 ,name,path="graphs/precision", minimum=0.50){
if (minimum < 0.05) {
minimum <- 0.05
}
rules_s <- rules_s[rules_s$precision >= minimum, ]
rules_2 <- rules_2[rules_2$precision >= minimum, ]
minimum = 100*minimum
if (nrow(rules_s) > 0) {
dir.create(path, showWarnings = FALSE)
# levels <- 5*0:20
lmax1 <- max(rules_s$precision)
lmax2 <- max(rules_2$precision)
lmax <- max(c(lmax1,lmax2))
lmax <- floor(lmax*100/5)
lmin <- floor(minimum/5)
levels <- 5*lmin:lmax
counts <- sapply(levels, pcount, rules=rules_s)
counts2 <- sapply(levels, pcount, rules=rules_2)
stacks <- rbind(counts,counts2)
filename <- paste(path,"/",name,"compared_precision_accum.png",sep="")
png(filename, res=100, height=800, width=1000)
par(mar=c(5,5,6,5))
bp <- barplot(stacks, main=paste("Precision comparison",name), beside=TRUE, names.arg=levels, col=c("dodgerblue","lightblue"), xlab="Precision threshold", ylab="Number of rules")
labels <- rbind(counts,counts2)
text(x=bp,y=labels,labels=labels, cex=0.8,pos=3,xpd=TRUE)
legend("topright", c("Grouping by element","No grouping"), fill=c("dodgerblue","lightblue"), xpd=NA)
dev.off()
}
}
precision_compare_graphs(rules_antequera1day, rules_antequera_nc,"Antequera (compared precision)", minimum = 0.5)
dev.off()
rm(albacete)
rm(albacete_reltypes)
rm(alldays)
rm(antequera)
rm(antequera_fired)
rm(*)
rm(data)
rm(ns)
rm(a)
rm(antequera_reltypes)
rm(bp)
rm(consequents)
rm(consequent_type_chart)
rm(consequent_types)
rm(ord)
rm(orders)
rm(ordd)
rm(objects)
rm(rulebind)
rm(rules)
rm(rules1)
rum(rules2)
rm(rules2)
rm(rules_albacete1day)
rm(rules_albacete1week)
rm(rules_albacete2days)
rm(rules_antequera1day)
rm(rules_antequera_nc)
rm(ruleset)
rm(rules_segovia1day)
rm(rules_segovia2days)
rm(rules_segovia7days)
rm(rules_sevilla1day)
rm(segovia)
rm(segovia_reltypes)
rm(sevilla)
rm(sevilla_reltypes)
rm(translationdf)
rm(besid)
rm(counts)
rm(day)
rm(filename)
rm(hour)
rm(height)
rm(i)
rm(levels)
rm(lmax)
rm(name)
rm(numtyp)
rm(path)
rm(r)
rm(r2)
rm(stacks)
rm(tabla)
rm(title)
rm(types)
rm(daysplot)
rm(days_types_plot)
rm(days_types_pred_fract)
rm(getconsequent)
rm(pcount)
rm(precision_compare_graphs)
rm(precision_graphs)
rm(pred_per_day_type)
source('~/Desktop/trainmining/fileloader.R')
source('validation.R')
source('cspade_wrapper.R')
source('create_baskets_k-fold.R')
path_sequences <- "/opt/adrian/r-output/sequences/"
# Ejemplo de ejecución para Segovia (todo junto), predicción a 1 día con soporte minimo de 0.3 y secuencias de longitud maxima 5
execute_all("segovia_general_nextday",segovia,days=1,sp=0.5,gap=1,msize=5)
source('exec_data_mining.R')
# Ejemplo de ejecución para Segovia (todo junto), predicción a 1 día con soporte minimo de 0.3 y secuencias de longitud maxima 5
execute_all("segovia_general_nextday",segovia,days=1,sp=0.5,gap=1,msize=5)
source('exec_data_mining.R')
install.packages(c("arules", "arulesSequences"))
source('exec_data_mining.R')
# Ejemplo de ejecución para Segovia (todo junto), predicción a 1 día con soporte minimo de 0.3 y secuencias de longitud maxima 5
execute_all("segovia_general_nextday",segovia,days=1,sp=0.5,gap=1,msize=5)
source('exec_data_mining.R')
install.packages("arulesSequences")
